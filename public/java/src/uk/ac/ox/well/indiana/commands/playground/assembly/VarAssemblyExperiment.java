package uk.ac.ox.well.indiana.commands.playground.assembly;

import htsjdk.samtools.reference.IndexedFastaSequenceFile;
import htsjdk.samtools.reference.ReferenceSequence;
import htsjdk.samtools.util.StringUtil;
import org.jgrapht.DirectedGraph;
import org.jgrapht.graph.DefaultDirectedGraph;
import org.jgrapht.traverse.DepthFirstIterator;
import org.jgrapht.traverse.TopologicalOrderIterator;
import uk.ac.ox.well.indiana.commands.Module;
import uk.ac.ox.well.indiana.utils.arguments.Argument;
import uk.ac.ox.well.indiana.utils.arguments.Output;
import uk.ac.ox.well.indiana.utils.io.cortex.graph.CortexGraph;
import uk.ac.ox.well.indiana.utils.io.cortex.graph.CortexKmer;
import uk.ac.ox.well.indiana.utils.io.cortex.graph.CortexRecord;
import uk.ac.ox.well.indiana.utils.io.cortex.links.CortexLinksMap;
import uk.ac.ox.well.indiana.utils.io.gff.GFF3;
import uk.ac.ox.well.indiana.utils.io.gff.GFF3Record;
import uk.ac.ox.well.indiana.utils.sequence.CortexUtils;
import uk.ac.ox.well.indiana.utils.stoppingconditions.NahrStopper;
import uk.ac.ox.well.indiana.utils.traversal.*;

import java.io.File;
import java.util.*;

/**
 * Created by kiran on 08/05/2017.
 */
public class VarAssemblyExperiment extends Module {
    @Argument(fullName="graph", shortName="g", doc="Graph")
    public CortexGraph GRAPH;

    @Argument(fullName="parents", shortName="p", doc="Parents")
    public ArrayList<String> PARENTS;

    @Argument(fullName="child", shortName="c", doc="Child")
    public String CHILD;

    @Argument(fullName="roi", shortName="r", doc="ROI")
    public CortexGraph ROI;

    @Output
    public File out;

    @Override
    public void execute() {
        CortexLinksMap lm = new CortexLinksMap("PG0063-C.ERR019060.k47.3D7.ref.links.raw.ctp.gz");

        int childColor = GRAPH.getColorForSampleName(CHILD);
        Set<Integer> parentColors = new HashSet<>(GRAPH.getColorsForSampleNames(PARENTS));

        Map<String, String> varSeqs = new LinkedHashMap<>();
        varSeqs.put("PF3D7_0100100", "ATGGTGACGCAAAGTAGTGGTGGGGGTGCTGCTGGTAGTAGTGGTGAGGAAGATGCCAAACATGTATTGGATGAATTTGGGCAACAAGTGTACAATGAAAAAGTGGAAAAGTATGCTAATTCTAAAATATATAAAGAGGCGTTGAAAGGAGATTTGTCACAAGCATCAATTTTGAGCGAATTAGCTGGCACCTATAAACCATGTGCCCTTGAATATGAATATTATAAGCATACTAATGGCGGTGGTAAGGGTAAAAGGTATCCGTGTACAGAGTTAGGTGAAAAAGTAGAACCACGTTTTTCGGATACACTTGGTGGTCAGTGTACTAACAAAAAAATAGAAGGTAATAAATATATTAAAGGTAAGGATGTTGGTGCTTGTGCACCATACCGACGTCTACATCTATGTAGTCATAATTTGGAAAGTATACAAACAAATAATTATAATAGTGGTAATGCTAAACATAATTTATTGGTAGATGTGTGTATGGCAGCCAAATACGAAGGGGACTCAATAAAAAACTATTATCCAAAGTATCAAAGAACATATCCTGATACTAATTCTCAATTATGTACCGTGTTGGCACGAAGTTTTGCTGATATAGGAGATATCGTACGCGGTAAAGATCTGTATCTCGGTAATCCACAAGAAAGTACACAAAGAATAATATTAGAAAATAATTTGAAAGATATTTTCGCGAAAATACATAGTGACGTGATGTCAACGAGCGGGAGTAATGGGAGGGCGCTACAAAAACGCTACAAAGATACTGATAATTATTATGAATTGAGAGAAGATTGGTGGGCACTTAATAGAGACCAAGTATGGAAAGCTATCACATGCAATGCTGGGGGTGGTAATAGATATTTTCGACAAACATGTGGTTCAGGAGAATGGGCTAAAGACAAATGCCGGTGTAAGGACGACAAGGTCCCCACATATTTTGACTATGTGCCACAGTATCTTCGCTGGTTCGAGGAATGGGCCGAAGATTTTTGTAGATTAAGGAAACATAAATTAAAAGATGCTAAAAACAAATGTCGTGGAGATAGTGGTAACGATAGATATTGTGATCTTAATAGGTATGATTGCACACAAACTATTAGAGGAAATGAACATTTTGTTGAAAAGGATGATTGTAAAGGTTGTCAGTATTCGTGCGCTCATTTTGTGAACTGGATAGATAACCAAAAACTAGAATTTGAAAAACAAAAAGAAAAATATACAAAAGAAATTAAAAAAAAGCATCCAACAACCATAATAATAAAAACTGCAAATCGAAAAACAACTATTAATAACTTATATGTAAAAGAATTTTATAAAAAACTTCAAGAGAAATATGGAGATGTCGAAAATTTTTTACAAAAATTAAATGAAGAACAAATATGCAAAAATCAACCGTACAATGATGAAAGTAGTATTGATATTAATTTCAAAAGTATTAAAGATATTGACATATTTTCTCATACGGAATACTGTCAAGCATGTCCATGGTGCGGGGCCAAACGTAAAGGTAAAGGATGGGAACCTAAAGAAAAAACCTGTGGAAAAACAAAGACATACGATCCTAAGAAAACAACGAATATACCAATACTTACCCCTTATATATCACAGCAAAGTATACTAAAAAAATATAATAAATTTTGTAATGGTAATGGTGGAAATGGTGCACCTGCTACTGCAACTGGTGGTGGTCAAATTAAAAATTGGCAATGTCATTATGAAGGTGATAATAATGATAATTGTGTAGAAGGAGAATGGAAAGAGTTTAAAGAGGGTAAAAACGTTATGTCCTATAATGCTTTTTTTTGGAAGTGGGTTCATGATATGTTAATCGACTCTATGCAATGGAGAAATGAACATGGAAATTGTATAAATAAAGATAATGACAACACATGTAAAAATTCATGCAAAAGACCATGTGAATGTTTTAAAAGATGGGTAGATCAAAAAAAAAAAAACGAATGGGAGGCAATAAAAGACCATTTTAAAAAGCAAAATATTGCAGCTGAAACACAATGTGATCCTGGCGTAACTCTTCAATGGGTTTTGATATTAGACTTTTTGAAAGACGAATCCACAGAAGATAAGGAAAATAAGGTGAGTGCAGAGGAGGCAAAGGAAATAAAACACCTTCGCCAAATGTTGCAACAAGCAGGCGTTGATGATCCTGCTGCTTTTGCTCGTCCGTGTACTGAAGATGGTGTCGCTGAACAGGACACTATAATGGATAAATTGCTCAATCGCGAAGAAAACGATGCCACTGAATGCAAAAAATGCGACAAACCACCACCAGCACCCACTGCAGGAGATCGTGGCCCTGGAGCCCGCGCCGACCCCCACGACGTCCAACAGCCACGACCTCCTGGTAGTGGCCCCGGCACGGACGCCAACGACGAAGACGATGATGACGATGATGACGATGATGACGAAGAAGACGGTGAAGCCAAAGAAGAAGAAGAAGACGAGGAAAAACAAGAGGACGTCCACCAGGAGGAAAAGGCAAAGAAGGAAGAACCACAAAAAGAGGAGGTGGCACGAACACCAAAAGACGATGTAAATGTGTGCAATATAGTGAACAATGTGTTTACAGACGGCAGTAGTCTCCAAGCAGCGTGCTCTCTCAAATATGGCAAAAACGCACCCACAAGTTGGAAGTGTGTCACACCAAGTGGTAACACGAGTGACACCACTGTCAAAAGTGGTGACACCACCGGTGGTAGTATTTGTGTGCCACCCAGGAGACGACGATTATATGTCACACCACTAACGAGATTGACAGGTGGTGACAGTACCACACAGGCGTCACAGGCGAGTGAGGTACAGACACAAGCACGTGGTAGTAACACGGATAAGTCACCAGGTAGTAGTGAGGCAGCACAAGGTGACGGCGTGTCGAAAGACCCACAAAAGGCACTACTCAAAGCTTTTGTTGAGTCTGCAGCAGTTGAAACCTTCTTCCTATGGGATAGATATAAAAAAATAAAAGAGAAGGAGAAAAAGGAAAAAAAGAAAACATATGAACAAATATATGAATCAACCGACTATGACGATGAAGAAAAAGATCCACAAGAAGAATTAAAAAAAGGAATAATCCCTGATGAGTTTAAGCGTCAAATGTTTTATACGTTAGGTGACTACAAAGATATATTATACAGTGGTGATACGGTGAATGGTGGTAATGAGGACAAAATAAAAAAAGCTATAAATAACTATTTTCAAAAAATTCGTGAACAATCTTCTAGTGATAACAACCCATCTCCTCGTAGTGTCAAAACCCCTTCAACTAGTGACAAGGACCCTCAAACCTGGTGGAATGCACACGCCCCTTCCATCTGGAATGCTATGGTATGTGCTTTAACATATGATACAAACAGTGGCGGAGAGGGCAAAACCACAACTATTACGCAGGATCCTAATTTGAAAACTGCACTTTGGGACGAAAACGGCAAAAAACCCCTCAAAACCAAATACCAATATGATAGTGTCACAATTGGTGCTAGTGGTGCCAAACCCCAAACCAAAGCCAAACCCACTGGTGGTGACACCCCCCTCACCCAATTTGTGTTACGCCCCACCTACTTCCGATACCTTGAAGAATGGGGTCAAAATTTTTGTAAAAAACGAACAGAGATGTTGGAGAAAATAAAATATGAGTGTAAAGTAGGACAAGGTCGTGGTGGTCGTAAACAAAAAACCCCACAATGTAGTTGTTATGGGGAAAATTGTGACGATCAGCTTGACGACAATCCTAGTACTGATGCGGATTTAAAATGTCCTGGTTGTGGAAGAGAATGTAGAAAATATAAAAAATGGATAGAAAAAAAAAAAGAGGAATTTACTAAACAATCAAATGTATATGAAGAACAAAAAACAAAATGCCAAAAGGAAAGTAAGAGTGCTAAAGGTAATAACCACGGTAATGAATTTTGTGGAACACAAGGAACGTGCGATACAGCTGGAGACTTTTTAAATAGGTTAAAAAGTGGACCATGTAAAAAGGAGAATGGAAAGGATAATCAAGAGGATGAAATAAATTTTAAGGATGAAGATAAAACATTTGGACATGAAAATTATTGTGCTCCATGTCCTGTATTTAAAGATATATGTAAAAAAAAGGATTGCCGTAATGCTTCTAACAATATGTGCAATGGAAAAGATTTTATTACTGCAGAAGATATTAAAATAATGGACAGCAGTAGTGAAGAAGTTAATATGCTTGTGAGTGATAACGATACAAATAAATTTGATGGTGGTTTAGACGCTTGTAAAGATGCCCATATCTTTAAAGGTATTAAAGAAAATAAATGGTCATGTGGTAACGTATGTGGTTATAATGTGTGTAAACCGAAAAAAGTTAATGGGGAAAAAGGTAGTGGGGAAAACAATGATCAAATTATAACAATTAGAGGTTTGGTTACACATTGGGTACAAAATTTTTTAGACGATTATAATAAAATTAGAACAAAATTAAAGCCATGTAGGAATAATGGTGAGGTATCCAAATGTATAAAAGATTGTGTGAAAAAATGGGTAGAAAAAAAAACTGAAGAATGGCCAAAAATACGAGATCGTTACTTGGAACCATATAAAAGTGATGATGGCTATAACAAAAAATCTTTGGTTAGAAGTTTTATGGAGACCTTGATACCTCTAATGGATCTTACAAATGGTAAGGAAAAGATTCAAGAATTAAATAAGTTCCTTAGGTCATATGAATGTAATTGCGCTGATAACTCACAACAAAAAGGTGATACACCAAAAGACATCGTAGAATGTTTGCTTGAAAAGCTTGAAGATAAAGCAAACAAGTGTAAAACCCAAACTAGTGGTACCGACTGTCACCCCTCCACCCCCCTTGAAGATGACGATGAACCCCTTGAAGAAACAGAAGAAAATACTGTGGAACAACCGAACATTTGTCCAACAAAACAACCACAACCAGAGAAAGAAGACGGTTGTGAAGCAGCACCAACAACAGCAGAAGAAACGTCACCAACAGCAACTAGTGAAGGCACAGAGAACCAATCCCCTCCACCTCCTCCTCCAGCACCAGCACCAGCACCAGCACCGGCACCAGAAAAATCACAACCAAAAGAAGACAAAAAAGTGGAACCACAACCCAAACCACAACCAACAAACCCCCCCCCAAATTTGTTCAACAACCCCGCTGTTATACCCGCCCTCATGTCTTCTACCATCATGTGGAGTATTGGCATCGGTTTTGCTGCATTCACTTATTTTCTTCTAAAGgtattatatatatatatgtatatgtggggatgtgttttttttatatgtatttgtggggtgtgtttggatatatatatatgtatatgtgtttctgtatatgtgttttctgtatatgtatgtgttcgtatgtttggatatatatttgtgtatatgtatgtgttttatatatattttatatatatgtatttatattgataaagaaaaaaatgaaaaaaagaaaaaaaaaaatttattaaaataaaaaaaaaaaaaaaaaaaaggagaaaaatattttaaaaataataaaaattaaaataaaaatataaattttgataaaataaaaaatgaaaaatattatcaaaaagaaattaaaaaaaattttatatataaaaaaaatgattataaaaaaaatttattagaaataaaataaaaaaaaatttattaaataaaaacaaaaaaaaaaaaaaaggagaaaaatattttaaaaataataaaaattaaaataaaaatataaattttgataaaatgaaaaatgaaaaatattatcaaaaagaaattaaaaaaaattttatatataaaaaaaatgattataaaaaaaatttattagaaataaaataaaaacaaatttattaaataaaaaaaaaaaatgttaaaaaaaaatatatatatcataaaataaaaaaaaaagaaaaaaatatattaaaaaaaaaatatatatcataaaataaaaagaaaagggaaaaaatgtttaaaaaaaaaataaaaataaaaaaaaaaaaaaaaaaaaaaaaaaaattaaaaaaaaaaaataaaattaaaataaaaaaaaataaaaaaaatttaattaaataaaaaaaaaaaaatttaattaaataaaaaaaaaaaaattaaattaaatacatgcacatatacatatacgcatacatatacatatacacataaatatatatattatatatatatacccataactacattcacatatacacatacatatatatattatatatatatatacccataactacatacatatatacattaacaaacacatagatatacataaatacatatatacattaacaaacacatatatatacctaaatacatatatacatacacatatatgttcatttttttttttagAAAAAAACCAAATCATCTGTTGGAAATTTATTCCAAATACTGCAAATACCCCAAAACGATTATGGAATACCAACATTGAAATCCAAAAATAGGTACATACCATATAGAAGTGGTACATATAAAGGCAAAACATATATTTATATGGAAGGAGATAGCAGTGGAGATGAAAAATATGCATTTATGTCTGATACTACTGATGTAACTTCCTCAGAAAGTGAGTATGAAGAATTGGATATTAATGATATATATGTACCGCATGCTCCTAAATATAAAACATTAATTGAAGTAGTACTTGAACCTAGTGGTAACAACACAACAGCTAGTGGTAAAAACACACCTAGTGATACACAAAATGATATACCAACTAGTGATACACCACCACCCATTACTGATAATGAGTGGAATACATTGAAAGATGAATTTATATCACAATATCTACAAAGTGAACAACCAAAGGATGTACCAAATGATTATAAAAGTGGTGATATTCCATTGAATACACAACCGAATACTTTATATTTTAATAAACCTGAAGAAAAACCTTTTATTACTTCTATTCATGATAGGGATTTATATACTGGAGAACAAATTAGTTATAATATTCATATGAGTACTAATACTATGGATGATCCAAAATATGTATCAAATAATGTATATTCTGGTATAGATTTAATTAATGACGCACTAAATGGTGATTATGACATTTACGATGAAATATTGAAACGAAAAGAAAATGAATTATTTGGAACAAATCATGTGAAACAAACAAGTATACATAGTGTTGCCAAACTAACAAATAGTGACCCCATCCACAACCAACTGGAACTATTCCATAAATGGTTAGATAGACATAGAAATATGTGTGAAAAGTGGAAAAATGATAATGAGCGGTTAGCCAAATTAAAAGAAGAGTGGGAAAATGAGACACATAGTGGTAACACTCACCCTAGTGATAGTAACAAAACGTTAAATACTGATGTTTCTATACAGATAGATATGGATCATGAAAAACGAATGAAGGAATTTACTAATATGGATACTATCTTGGATGATTTGAAAACATATAATGAACCTTATTATGATGTGCAAGATGATATTTATTATGATGTAAATGATCATGATGCATCAACTGTGGATAGTAATAATATGGATGTTCCCAGTAGAGTACAAATTGAAATGGATGTAAATACGAAATTGGTGAAAGAGAAATATCCTATAGCCGATGTATGGGATATATAA".toUpperCase());
        varSeqs.put("PF3D7_0223500", "ATGGGGAGTGGTAAGGGCGGTGATCCGCAGGATGAAAGTGTCAAACATATGTTTGATAGGATAGGAGAAGATGTGTACGAGCAAGTGAAAAGTGAAACTGTAAATTATGTTAGTGAATTGGAAGGAAAGTTGTCACTAGCACCAATTTTGGGTGTGGAATCAGGTAGCACCAATGAAACATGCAACCTTGTACAGGATTATTATAATAAGCCTGTTTATGGTAACAGTAACAGGTATCCGTGCAAAAATTTAAAAGGAATTACAAATGAAGAACGTTTTTCGGATACACTTGGTGGCCAGTGTACTAACAAAAAAATAAAAGGTAATGAATATAGTACTAAAAGTGGTAAAGATTGTGGAGCATGTGCACCATACCGACGTCTACATTTATGTAGTCATAATTTGGAATCTATAGACACAACGTCGATGACGCATAAGTTGTTGTTAGAGGTGTGTATGGCAGCAAAATACGAAGGAAACTCAATAGATACACATTATCCACAACATCAACGAACTAATGAGGATTCTCCTTCTCAAATATGTACTATGTTGGCACGAAGTTTTGCAGATATAGGTGATATTGTAAGAGGAAAAGATTTATTTTATGGTAATAGCAAAGAAAAAGAAAAAAGAGATGAATTAGAAACCAATTTGAAAACAATTTTCGGGAAAATACATGAAAAATTGAAGGATAAGGAAGGAGCAGAAACTCGTTACGGAAGTGATACTACAAATTATTATCAATTACGAGAAGACTGGTGGTATGCGAATCGCGCCACAGTGTGGGAAGCTATCACGTGCGACGTTCATGGTTCTGACTATTTTCGACAAACATGTGGTGATAAAGAAACCACTGCAACTCGGGTTAAAGACAAATGCCGCTGTAAGGACGAAAACGGCAAAAAGCCCGGCTCAAATGCCGACCAAGTCCCCACATATTTTGACTACGTGCCGCAGTATCTTCGCTGGTTCGAGGAATGGGCAGAAGACTTTTGTAGGAAAAAAAAAAAGAAATTAGAAAAGTTGGAACAACAGTGTCGCGATTACAAACAAAATTTATATTGTAGTGGTAATGGCTACGATTGCACAAAAACTATATACAAAAAAGGTAAACTTGTTATAGGTGAACATTGTACAAACTGTTCTGTTTGGTGTCGTCTGTATGAATCTTGGATAGATAACCAAAAACTAGAATTTCTAAAACAAAAACAAAAATACGAAACAGAAATATCAAATAGCGGTAGTTGTGGTGGGAGTGGTGGTGTTAAGGGTAGGAATAGGAAAAAACGGGGTGCAGGTGTAGAAACTGCTACTAATTATGATGGGTATGAAAAAAAATTTTATAAAGAACTGAAAGAAAGTGAGTATGGAAAAGTCGATGATTTTTTAAAATTATTAAATAATGAAGATGTATGCAAAAAAATTAAGGATGAAAAAGAAAAAATTGATTTTACCAAACCTGCTGATAAAAATAGTAATAATGAAGGAACATTTTATCATTCGGAATATTGTAAACCGTGTCCCGACTGTGGGGTCAAACGTAAAGATAATCAATGGAAAGATAAATATGATGGCAAGTGCACACGTGGAAAACTTTATGAGCCTGCAAGTGGCGCACAAGGTACTCCTATTAAAATCCTTAAAAGTGGTGAAAAACAAAAAGAAATTGAAACAAAATTAAAAGCGTTTTGCGATCAAACAAATGGTGATACAACAAATAGTGTTGCTAGAGGCGGTGGCGCTGATGGTAGTGGTAGTAAGAGTAATAGTAAGGAACTGTATGAAGAATGGAAATGTTATAACGAGGTACAGAAAGTTAAAGATGATAAAAATGGAGAGGAAGAGGATGAAGACGAGGAAGATGTAGACAAGGTAAAAAAAGCAGGCGGATTATGTATATTGGAAAACAAAAAACATGAAAGTAGAAATAATTCTTCAAATGAACCTGAGCAATTCCAAAAGACATTCCATGATTTTTTTTACTTTTGGATAGGACGTTTTTTGAACGATTCTATGTATTGGAGAGGAAAAGTTAACAGTTGTATAAATAATCCTAAGCGAAAGAAATGTAGAAATGAATGTAAGGATGATTGTGGTTGTTTTAAAGAATGGATTGGAAAAAAGAAAGAAGAATGGGAAAATATAAAAAAACATTTTAAAACGCAAGAAGCTTTTAAGAATAAACGAGAAAATAGCGGAATTGACATGTTCAGCGGACTAATGGATTCTGCTGATGTTGTTCTTGAATTGGCTTTGGAATTAGAACAACTTTTCCAAGATATTAAAGATGGTTATGGGGATGTAAAGGAATTAAAAGGAATTAAAGAACTGTTGGATGAGGAAAAAAAAAAAAAACAAGCAGAAGAAGCAGTTGTTGTTGTTGTTGCCGACAATCAAAAGAAGACCACAATTGATAAATTACTACAACATGAAGGAGACGATGCCAATAACTGCCTAAAAACACACAAAGAAAAATGCGAAGAAACGCAACCAAAACCACCCGGCGCTGGAGGTCCTGGTGCCCCCTCCGAAACCGGAGAAACCACTACACTTGAGGACGAAGAAGAAGAAGAAGACGAAGAAGAAGACGCAGGCGACGAAGTCGAGGAGGGGGAGACGGTGGACACCACAGAAGGGGATGAGACAGAGACGGTGGAGCAGCCGGTGAAGGACACGGACAGGGAGGGGGAGGAGGAAGAGGCAAAGAAGGCAACAGATACGACTACATCACTAGACGTTTGCGACACAGTGAAAAACGCACTCACAAACAACGACAATCTCACTGATGCATGTAAACTAAAATACGGTCCAGGTGGAAAGGAAAGATTCCCCAATTGGAAATGTGTATCAAGTGGTGAAAAAAGTGTTGCCACTGCCGGTAGTAGTGGTGCCACTGGCAAAAGTGGTGATAAGGGTGCCATTTGTGTGCCACCCAGGAGGCGACGACTATACGTGGGTGGGTTAACCAAGTTGACAAGTGCTGGCACGTCTAGTGAGTCACCACAGGGGGGTAGTGAGTCATCACGGGCGAGTGATGTGTCACAAGGTAACGGCGGCGACGACATCACCACCACCGAGTCATTACGTAAGTGGTTTATAGAGACGGCAGCTATAGAGACTTTTTTCTTATGGCATAGATATAAAAAAGAGTGGGAGGCACAAAAGAAGGCGGAACTACAACGAAATGGATTACTACTCGGCACAGGTGCTAGCCTCAACCTTGGTGGTGATGACTCCAACCCCCAAACACAATTACAAAAAAGTGGTACCATACCCCTCGATTTCTTGAGATTAATGTTTTATACTTTAGGTGATTATAGAGATATTTTGGTACGAGGTGTTGCTGACGACAAAAACGGTGGCAACAACATAATACTTAATGCGAGTGGTAACAAGGATGAAAAACAGAAAATGGAGAAAATACAAGAGAAAATAGAACAAATTCTTCCAACTAGTGGTAACAAAGAAACTCGTGGCCCCCAAAATAGTGTCAATGACCGTCAATCCTTGTGGGATAGAATCGCCGAACATGTTTGGCATGGAATGGTTTGCGCATTAACATATAAAGATGACGACAATGGCCTCAAAGGCGTCGTAAAAAAACCACAAAAGATTGAAAATCCGGAGAAACTTTGGAACGAAACAACCAAAAAACCCAAAGACGAGAAATACCAATACCAAACTGCCAAACTCGAAGATGAAAGTGGCGAAAAACGACCAGACTCCTCAGCCAGTGGTACGAAATTAACCGACTTCATCAAACGCCCCCCTTATTTCCGTTACCTTGAAGAATGGGGTGAAAATTTTTGTAAAAAACGAACAGAGATGTTGGGGAAGATAAAGGAGGATTGCTACAAAAATGGTGGACGTTGTAGTGGTGATGGTTTGAAATGTAACGAAATAGTTATAGATAAGGAAAAAATTTTTGGCGATTTACTTTGTCCGACGTGTGCCAGACATTGTAGATTTTATAAAAAGTGGATAAACACAAAAAGGGACGAATTTAATAAACAATCAAATGCATATTCTGAACAAAAAAAAAAATACGAAGAGGAAAATGATAGTGCTCAAAAGAATAATGGAGTTTGCGGAACACTAAAAGATGACGCTGCAGAATTTTTAAATAGGTTAAAAAACGGACCATGTAAAAATGAGAGTGAAGAGAATAAAAAAGCAGAGGATGAAATAGATTTTAAGAAACCAGATGATACATTTAAAGATGCAGATAATTGTAAACCATGTTCTGAATTTAAAATTAAATGTGAAAATCATAATTGCAGCAGTGGTGGTAATACACAAGGGAAGTGCGATGGAAAAACGACTATTGCTGCAACAGAAATTGAAAATATAAAAACAAATACTAAAGAAGTTACTATGCTTGTGAGTGATGACAGTAAAAGTGCAACGGAATTTAAGGATGGTTTAAGCGAATGTAAAGATAAAGGTATATTTAAAGGTATTAGAAAAGATGAATGGGAATGTGGCAAAGTATGTGGTGTAGATATATGTAATCTGAAAAAAAAAGATAACATTGGGAAAGAAAGCGATAAAAAATATATCATAATGAAAGAATTGCTTAAACGATGGTTAGAATATTTTTTAGAAGATTATAATAAAATTAAACATAAAATTTCACATTGTACGAAAAATGGTAAAGGATCCAAATGTATAAAAGGTTGCGTAGATAAATGGGTACAACAGAAAAAGGAAGAATGGAAACAAATAAAAGAACGTTTCAATGAACAATATAAAAGTAAAACCTCAGATGAATATTTTAACGTTAAAAGTTTTTTGGAGACCTGGATACCTAAAATTGCTGTTGTAAATGATCAAGATAATGTTATAAAATTAAGTAAGTTCGGTAATTCTTGTGGATGTAGTGCCAGTGCGATCTCAACAAATGGTAATGAGGAGGATGCTATAGATTGTATGATTAAAAAGCTTGAAAAAAAAATTGACGAATGCAAAAGGAAACCTGGCGAAAATAGTGGTCAAACATGTAACGAAACACTAACACATCCCCTTGACGTTCAGGATGAAGATGAACCCCTTGAAGAAACAGAAGAAAACCCAGTGGGAAAACAACACCCATCATTTTGTCCGCCAGTGGAAGATAAAAAAAAAGAGGAAGAAGGAGAAACTTGTACACCGGCATCACCAGCACCAGCACCAGCACCAGCACCAGCATCTCCATCCCCGACACCGGCCCCTGCGGATGAACCGTTTGACCCAACTATACTACAAACAACCATTCCTTTAGGTATTGCGCTGGCATTAGGATCCATTGCTTTTTTATTTTTGAAGgtaatatatatatgtgtggtatatatgtatatatatatgtgtttctgtatatatatgtatgtgtgggtgtgtttggatatatatatatgtgtatgtataagtgtttgtgtatatgtatgtgatttatatatattttatatatatgtatttatattgaaaaagaaaaaaaaaaaaaaaaaaaaaaaaaaaaatttattaaaataaaaaaaaaaaaaaaaaaaaagagaaagattttaaaaataataaaaattataataaaaatataaattttgatagaataaaaaatgaaaaatattatcaaaaaaaaattaaaaaaaattttatatataaaaaaaatttattagaaataaaataaaaacaaaagaagaaaaaaaaaacattaaaaaaaaaaaaaatatatatatcataaaataaaaaaaaattaaaaaaatgttaaaaaaaaaatatatatcataaaataaaaaaaaaattaaaaaaatgttaaaaaaaaatatatatatcataaaataaaaaaaaaattaaaaaatttaattaaataaaaaaaaataataaataaaaaaatttaattaaataaaaaaaaaaaattaaaaaaaataaaataaaaaaaaaaaataaaaaaattaaaaaaaaaaaaaaaaaaaaaaatattttattcatacacatacatatacacatatatatatacatatattatatacatacacatatacctacatacatatacaaacctacttatacatacatacctcttttattattttagAAAAAAACTAAACACCCTGTCGACCTTTTCAGTGTTATTAATATCCCCAAAAGTGATTATGATATACCGACAAAACTTTCACCCAATAGATATATACCTTATACTAGTGGTAAATACAGAGGCAAACGGTACATTTACCTTGAAGGAGATAGTGGAACTGATAGTGGTTACACCGATCATTATAGTGATATTACTTCATCTTCCGAAAGTGAGTATGAAGAAATGGATATTAATGATATATATGTACCTGGTAGTCCTAAATATAAAACATTGATAGAAGTAGTACTTGAACCTAGTGGTAACAACACAACAGCTAGTGATACACAAAATGATATACAAAATGATGGTATACCTAGCAATAAATTTAGTGATAATGAATGGAATACATTGAAAGATGATTTTATATCTAATATGTTACAAAATCAACCAAAGGATGTACCAAATGATTATAAAAGTGGAGATATTCCATTCAATACACAACCGAATACTTTATATTTTGATAAACCTGAAGAAAAACCTTTTATTACTTCTATTCATGATAGAAATTTACTTAACGGAGAAGAATATAGTTATAATGTTAATATGAGTACTAATAGTATGGATGATCCAAAATATGTATCAAATAATGTATATTCTGGTATAGATTTAATTAATGATTCACTAAGTGGTAACAAACATATTGATATATATGATGAAGTTTTGAAACGAAAAGAAAATGAATTATTTGGAACAAATCATGTGAAACATACGAGTATACATAGTGTTGCAAAAAATACAAACAGTGATCCTATACTCAATCAAATAAATTTGTTCCATACATGGTTAGATAGACATAGAGATATGTGCGAAAAGTGGGAAAATCATCACGAACGATTAGCCAAATTGAAAGAAGAGTGGGAAAATGAGACACATAGTGGTAACACTCACCCTAGTGATAGTAACAAAACGTTAAATACTGATGTTTCTATACAAATACATATGGATAATCCTAAACCTATAAATCAATTTACTAATATGGATACTATCTTGGAGGATCTGGACAAACCATTTAATGAACCCTACTATTATGATATGTATGACGATGATATTTATTATGATGTAAATGATCATGATACATCAACTGTGGATACTAATGCTATGGATGTACCTAGTAAAGTACAAATTGAAATGGATGTAAATACCAAATTGGTGAAAGAGAAATATCCTATAGCAGATGTATGGGATATATAA".toUpperCase());

        Map<String, List<String>> varSeqList = new HashMap<>();
        Map<String, Integer> varSeqIndex = new HashMap<>();
        Map<String, String> varSeqId = new HashMap<>();
        for (String id : varSeqs.keySet()) {
            String seq = varSeqs.get(id);
            varSeqList.put(id, new ArrayList<>());

            for (int i = 0; i <= seq.length() - GRAPH.getKmerSize(); i++) {
                String sk = seq.substring(i, i + GRAPH.getKmerSize());

                varSeqList.get(id).add(sk);

                if (!varSeqIndex.containsKey(sk)) {
                    varSeqIndex.put(sk, i);
                    varSeqId.put(sk, id);
                }
            }
        }

        String id = "PF3D7_0100100";
        int i = 0;
        String lk = varSeqList.get(id).get(0);

        do {
            String sk = varSeqList.get(id).get(i);

            CortexKmer ck = new CortexKmer(sk);
            CortexRecord cr = GRAPH.findRecord(ck);

            if (cr.getCoverage(childColor) > 0) {
                log.info("{} {} {} {} {} {} {} {} {} {} {}", id, i, sk, cr.getCortexKmer(), cr.getCoverage(childColor), cr.getCoverage(0), cr.getCoverage(17), cr.getEdgesAsString(childColor), cr.getEdgesAsString(0), cr.getEdgesAsString(17), id);
                lk = sk;
                i++;
            } else {
                TraversalEngine e = new TraversalEngineFactory()
                        .traversalDirection(TraversalEngineConfiguration.TraversalDirection.FORWARD)
                        .combinationOperator(TraversalEngineConfiguration.GraphCombinationOperator.OR)
                        .traversalColor(childColor)
                        .recruitmentColors(parentColors)
                        .stopper(NahrStopper.class)
                        .graph(GRAPH)
                        .links(lm)
                        .make();

                DirectedGraph<CortexVertex, CortexEdge> dfs = e.dfs(lk);

                String contig = e.getContig(dfs, lk, childColor);

                for (int j = 0; j <= contig.length() - GRAPH.getKmerSize(); j++) {
                    String skn = contig.substring(j, j + GRAPH.getKmerSize());
                    CortexKmer ckn = new CortexKmer(skn);
                    CortexRecord crn = GRAPH.findRecord(ckn);

                    log.info("{} {} {} {} {} {} {} {} {} {} {}", "recon", j, skn, crn.getCortexKmer(), crn.getCoverage(childColor), crn.getCoverage(0), crn.getCoverage(17), crn.getEdgesAsString(childColor), crn.getEdgesAsString(0), crn.getEdgesAsString(17), varSeqId.get(skn));

                    lk = skn;
                }

                if (varSeqIndex.containsKey(lk)) {
                    i = varSeqIndex.get(lk);
                    id = varSeqId.get(lk);
                } else {
                    i = -1;
                }

                log.info("---");
            }
        } while (i >= 0 && i < varSeqs.get(id).length());

        log.info("");

        /*
        for (String id : varSeqs.keySet()) {
            String seq = varSeqs.get(id);

            Set<String> visited = new HashSet<>();

            String lk = seq.substring(0, GRAPH.getKmerSize());
            for (int i = 0; i <= seq.length() - GRAPH.getKmerSize(); i++) {
                String sk = seq.substring(i, i + GRAPH.getKmerSize());

                if (!visited.contains(sk)) {
                    CortexKmer ck = new CortexKmer(sk);
                    CortexRecord cr = GRAPH.findRecord(ck);

                    if (cr.getCoverage(childColor) > 0) {
                        log.info("{} {} {} {} {} {} {} {} {} {} {}", id, i, sk, cr.getCortexKmer(), cr.getCoverage(childColor), cr.getCoverage(0), cr.getCoverage(17), cr.getEdgesAsString(childColor), cr.getEdgesAsString(0), cr.getEdgesAsString(17), varSeqSet.get(sk));
                        lk = sk;
                    } else {
                        TraversalEngine e = new TraversalEngineFactory()
                                .traversalDirection(TraversalEngineConfiguration.TraversalDirection.FORWARD)
                                .combinationOperator(TraversalEngineConfiguration.GraphCombinationOperator.OR)
                                .traversalColor(childColor)
                                .recruitmentColors(parentColors)
                                .stopper(new NahrStopper(ROI))
                                .graph(GRAPH)
                                .links(lm)
                                .make();

                        DirectedGraph<CortexVertex, CortexEdge> dfs = e.dfs(lk);

                        String contig = e.getContig(dfs, lk, childColor);

                        for (int j = 0; j <= contig.length() - GRAPH.getKmerSize(); j++) {
                            String skn = contig.substring(j, j + GRAPH.getKmerSize());
                            CortexKmer ckn = new CortexKmer(skn);
                            CortexRecord crn = GRAPH.findRecord(ckn);

                            log.info("{} {} {} {} {} {} {} {} {} {} {}", "recon", j, skn, crn.getCortexKmer(), crn.getCoverage(childColor), crn.getCoverage(0), crn.getCoverage(17), crn.getEdgesAsString(childColor), crn.getEdgesAsString(0), crn.getEdgesAsString(17), varSeqSet.get(skn));

                            visited.add(skn);

                            lk = skn;
                        }

                        log.info("---");
                    }
                }

                visited.add(sk);
            }

            log.info("");
        }
        */

        log.info("");
    }
}
